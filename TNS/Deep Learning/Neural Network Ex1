{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMXOb0LvxwjKwgqq6/G6+Oj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_w4HQhkJOYei","executionInfo":{"status":"ok","timestamp":1756143480275,"user_tz":-330,"elapsed":34477,"user":{"displayName":"Nayna Sagar Dahatonde","userId":"08351810259517213934"}},"outputId":"7193af1b-be42-4532-eecb-d57ddde913ff"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: visualkeras in /usr/local/lib/python3.12/dist-packages (0.1.4)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.12/dist-packages (from visualkeras) (11.3.0)\n","Requirement already satisfied: numpy>=1.18.1 in /usr/local/lib/python3.12/dist-packages (from visualkeras) (2.0.2)\n","Requirement already satisfied: aggdraw>=1.3.11 in /usr/local/lib/python3.12/dist-packages (from visualkeras) (1.3.19)\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/keras/src/layers/core/dense.py:93: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","/usr/local/lib/python3.12/dist-packages/visualkeras/layered.py:86: UserWarning: The legend_text_spacing_offset parameter is deprecated and will be removed in a future release.\n","  warnings.warn(\"The legend_text_spacing_offset parameter is deprecated and will be removed in a future release.\")\n"]},{"output_type":"stream","name":"stdout","text":["Accuracy: 100.00%\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 68ms/step\n","\n","Predictions (rounded):\n","[[0.]\n"," [1.]\n"," [1.]\n"," [1.]]\n"]}],"source":["#!pip install visualkeras\n","import numpy as np\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","import matplotlib.pyplot as plt\n","from tensorflow.keras.utils import plot_model\n","import visualkeras\n","\n","# Input data (OR Gate)\n","X = np.array([[0,0],\n","              [0,1],\n","              [1,0],\n","              [1,1]])\n","\n","# Output data\n","y = np.array([[0],\n","              [1],\n","              [1],\n","              [1]])\n","\n","# Define the Neural Network model\n","model = Sequential()\n","model.add(Dense(units=4, activation='relu', input_dim=2))  # Hidden layer with 4 neurons\n","model.add(Dense(units=1, activation='sigmoid'))            # Output layer\n","\n","# Visualize\n","visualkeras.layered_view(model, legend=True).show()\n","\n","# Compile the model\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n","\n","# Train the model\n","model.fit(X, y, epochs=500, verbose=0)\n","\n","\n","# Evaluate the model\n","loss, accuracy = model.evaluate(X, y, verbose=0)\n","print(f\"Accuracy: {accuracy*100:.2f}%\")\n","\n","# Predictions\n","predictions = model.predict(X)\n","print(\"\\nPredictions (rounded):\")\n","print(np.round(predictions))\n","#plot_model(model, to_file='model.png', show_shapes=True, show_layer_names=True)"]}]}